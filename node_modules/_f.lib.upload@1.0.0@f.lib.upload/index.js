var fs = require('fs');
var path = require('path');
var os = require('os');
var package = require('./package.json');
// console.log(package);
var _upload = require('./upload');
var jwt = require('jsonwebtoken');
var prompt = require('./prompt.js');
// console.log(process.execPath);
// console.log(__dirname);
// console.log(process.cwd());

var uploadPath = '/fe/zl/test/live/';

function getRoot() {
    var platform = os.platform();
    var root;
    if (platform === 'win32') {
        root = path.parse(process.cwd()).root;
    } else {
        root = os.homedir();
    }
    return root;
}

function getCert(){
    var cert = fs.readFileSync(path.join(getRoot(),'private.key') , 'utf-8').toString();
    return cert;
}

function getAppname () {
  var package = fs.readFileSync(path.join(process.cwd(),'package.json') , 'utf-8').toString();
  var o = JSON.parse(package);
  return o.name.split('.').join('');
}

var start = function (path, keyname) {
  // console.log(keyname);
  var userKey = keyname;
  var cert = getCert();
  var appName = getAppname();
  // console.log(appName);

  var count = 0;
  var successCount = 0;
  var errorCount = 0;
  var fileCount = 0;

  fs.readdir(path, function (err, files) {
    files.forEach(function (item) {
      console.log(item);
      var stat = fs.lstatSync(path + '/' + item);
      if (!stat.isDirectory() && item.indexOf('.html') < 0) {
        count++;
        fileCount++;
        var filePath = 'dist/' + item;
        var filepath = uploadPath + appName + '/' + item;
        var cid = 'p0.ifengimg.com';
        var time = (new Date()).getTime();
        var token = jwt.sign({ 'fe.cid': cid , 'fe.filepath': filepath , 'time':time}, cert , { algorithm: 'HS256' });
        var params = [   {fname:'fe.cid' , fvalue : cid }
                        , {fname: 'fe.filepath' , fvalue :filepath}
                        , {fname :'fe.syncflag' ,fvalue: '1'}
                        , {fname :'username' ,fvalue: userKey}
                        , {fname :'token' ,fvalue: token}
                     ];

        // console.log(params);
        // console.log('============>', filePath);
        // console.log('------------>', filepath);
        _upload(filePath , params , {error:function(type , filepath , errMsg , errorCode){
          console.log(arguments);
          if(errorCode == 3){
            console.log(("NO upload permission!  " +errMsg).red);
            process.exit(1);
          }
          count--;
          console.log(('upload error : '+ type +' , filePath : ' +filePath +" , "+ errMsg).red);
        },  success:function(filepath){
            console.log(filepath);
            count--;
            successCount++;
          }
        });
      }
    });

    //监控是否处理完毕
    var start = function(){
        setTimeout(function(){
            if(count <= 0){
               console.log('upload files count : '+fileCount)
               console.log('success files count : '+successCount)
               console.log('error files count : '+errorCount)
            }else{
               start();
            }
        } , 2000)
    };
    start();

  });
};


function svnPassword() {
    prompt.readLine('请输入svn密码：',function(data){
        // 返回false则表示数据不合法，需要重新输入
        if(!data) return false;
        // 数据合法，返回true
        start(process.cwd() + '/dist', data);
        return true;
    },true);
}
 
prompt.startStepByStep({
    svnPass:svnPassword
});

// start(process.cwd() + '/dist', data);


